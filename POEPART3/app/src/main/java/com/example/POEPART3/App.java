/*
 * This source file was generated by the Gradle 'init' task
 */
package com.example.POEPART3;

import java.util.Scanner;

public class App {
    public static void main(String[] args) {
        Login loginApp = new Login();
        Scanner scanner = new Scanner(System.in);
        boolean running = true;

        while (running) {
            System.out.println("\nChoose an option:");
            System.out.println("1 - Register");
            System.out.println("2 - Login");
            System.out.println("3 - Exit");
            System.out.print("Your choice: ");
            int choice = scanner.nextInt();
            scanner.nextLine(); // consume newline

            switch (choice) {
                case 1:
                    String regResult = loginApp.registerUser(scanner);
                    System.out.println(regResult);
                    break;
                case 2:
                    String loginResult = loginApp.returnLoginStatus(scanner);
                    System.out.println(loginResult);
                    if (loginResult.startsWith("Welcome")) {
                        System.out.println("\n--- Welcome to QuickChat ---");
                        Message.loadStoredMessagesFromFiles(); // Load JSON files
                        runQuickChat(scanner);
                    }
                    break;
                case 3:
                    System.out.println("Goodbye!");
                    running = false;
                    break;
                default:
                    System.out.println("Invalid option. Please choose 1, 2, or 3.");
            }
        }
        scanner.close();
    }

    public static void runQuickChat(Scanner scanner) {
        int totalMessages = 0;
        int sentMessages = 0;

        System.out.print("How many messages would you like to send? ");
        while (true) {
            try {
                totalMessages = Integer.parseInt(scanner.nextLine());
                if (totalMessages <= 0) throw new NumberFormatException();
                break;
            } catch (NumberFormatException e) {
                System.out.print("Please enter a valid number greater than 0: ");
            }
        }

        boolean chatting = true;
        while (chatting) {
            System.out.println("\nQuickChat Menu:");
            System.out.println("1 - Send Message");
            System.out.println("2 - Show Recently Sent Messages");
            System.out.println("3 - Display Senders & Recipients");
            System.out.println("4 - Display Longest Message");
            System.out.println("5 - Search by Message ID");
            System.out.println("6 - Search by Recipient");
            System.out.println("7 - Delete Message by Hash");
            System.out.println("8 - Display Full Report");
            System.out.println("9 - Quit");
            System.out.print("Your choice: ");
            String input = scanner.nextLine();

            switch (input) {
                case "1":
                    if (sentMessages >= totalMessages) {
                        System.out.println("Message limit reached.");
                        break;
                    }
                    System.out.print("Enter recipient cell number (e.g. +27831234567): ");
                    String recipient = scanner.nextLine();
                    System.out.print("Enter message (max 250 characters): ");
                    String messageText = scanner.nextLine();
                    if (messageText.length() > 250) {
                        System.out.println("Please enter a message of less than 250 characters.");
                        break;
                    }
                    Message message = new Message(recipient, messageText);
                    if (!message.checkMessageID()) {
                        System.out.println("Invalid message ID.");
                        break;
                    }
                    if (!message.checkRecipientCell()) {
                        System.out.println("Invalid recipient number.");
                        break;
                    }
                    String result = message.sendMessage();
                    System.out.println(result);
                    if (result.equals("Message sent")) {
                        sentMessages++;
                    }
                    break;
                case "2":
                    System.out.println(Message.printMessages());
                    break;
                case "3":
                    Message.displaySendersAndRecipients();
                    break;
                case "4":
                    Message.displayLongestMessage();
                    break;
                case "5":
                    System.out.print("Enter Message ID: ");
                    String id = scanner.nextLine();
                    Message.searchByMessageID(id);
                    break;
                case "6":
                    System.out.print("Enter Recipient Number: ");
                    String rec = scanner.nextLine();
                    Message.searchByRecipient(rec);
                    break;
                case "7":
                    System.out.print("Enter Message Hash to delete: ");
                    String hash = scanner.nextLine();
                    Message.deleteByHash(hash);
                    break;
                case "8":
                    Message.displayFullReport();
                    break;
                case "9":
                    chatting = false;
                    System.out.println("Exiting QuickChat...");
                    break;
                default:
                    System.out.println("Invalid option.");
            }
        }
    }
}